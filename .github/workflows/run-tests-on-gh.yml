name: Run Performance Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      test-changes: ${{ steps.changes.outputs.test-sources }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Check if any source code has changed
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            test-sources:
              - 'src/**/*' 
              - '.github/workflows/run-tests-on-gh.yml'
              - 'pom.xml'
              - 'commit-report.sh'

  build-and-test:
    needs: changes
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || needs.changes.outputs.test-changes == 'true' }}

    runs-on: ubuntu-latest
    env:
      SIMULATION_PRESET: standard

    steps:
      - name: Checkout main branch code
        uses: actions/checkout@v4

      - name: Update the load configuration for PRS
        if: github.event_name == 'pull_request'
        run: |
          echo "SIMULATION_PRESET=pull_request" >> $GITHUB_ENV

      - name: Update the load configuration for commits
        if: github.event_name == 'push'
        run: |
          echo "SIMULATION_PRESET=commit" >> $GITHUB_ENV

      - name: Start an OpenMRS instance
        run: docker compose -f src/test/resources/docker-compose.yml up -d

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Install dependencies
        run: ./mvnw install -DskipTests

      - name: Wait for the OpenMRS instance to start
        run: while [[ "$(echo $(curl -s -o /dev/null -w '%{http_code}' http://localhost/openmrs/login.htm))" != "200" ]]; do echo "$(curl -i http://localhost/openmrs/login.htm)"; sleep 10; done

      - name: Get System Information
        run: |
          total_ram=$(free -h | grep Mem | awk '{print $2}')
          num_cpus=$(nproc)
          total_disk=$(df -h / | grep / | awk '{print $2}')
          description="Executed on a GitHub Actions runner with ${total_ram} RAM, ${num_cpus}CPUs, and ${total_disk} disk space."
          echo "GATLING_RUN_DESCRIPTION=${description}" >> $GITHUB_ENV

      - name: Run performance tests
        run: ./mvnw gatling:test -Dgatling.runDescription="${{ env.GATLING_RUN_DESCRIPTION }}"

      - name: Stop the OpenMRS instance
        if: '!cancelled()'
        run: docker stop $(docker ps -a -q)

      - name: Checkout report branch for trend data
        if: always() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
        uses: actions/checkout@v4
        with:
          ref: report
          path: ./report-data

      - name: Prepare trend data file
        if: always() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
        run: |
          TREND_FILE_SOURCE=./report-data/performance-trends/requests-trend.csv
          TREND_FILE_DEST=./performance-trends/requests-trend.csv
          mkdir -p ./performance-trends
          if [ -f "$TREND_FILE_SOURCE" ]; then
            cp "$TREND_FILE_SOURCE" "$TREND_FILE_DEST"
          fi

      - name: Parse Report and Update Trends
        if: always() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
        run: ./mvnw exec:java -Dexec.mainClass=org.performance.parser.TrendDataParser

      - name: Modify the Generated Report
        if: always() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
        run: |
          chmod +x report-mod.sh
          ./report-mod.sh

      - name: Set up Git
        if: always() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit the report to the report branch
        if: always() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
        run: |
          chmod +x commit-report.sh
          ./commit-report.sh

      - name: Push changes
        if: always() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
        run: git push origin HEAD:report -f

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: target/gatling
          retention-days: 30

      - name: Capture Server Logs
        if: always()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: './logs'

      - name: Upload Logs as Artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: server-logs
          path: './logs'
          retention-days: 2
          overwrite: true
